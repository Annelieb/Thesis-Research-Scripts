[chunk,stamps] = inlet.pull_chunk();
data2{trial} = chunk;
if trial > 1;
    if max(data2{trial}(25,:)) > 20;
        START = true;
        win1 = 1;
        [pks,locs] = findpeaks(double(data2{trial}(25,:)));
        if stopp;
            stop(tmr);
            clc;
            close;
            GO = false;
        end;
    end;
    if GO;
        clear New New2 AL AR envelopeL2 envelopeR2;
        for ch = 1:24;
            New(ch,:) = double(data2{trial}(ch,:));
            [New(ch,:)] = Rbp(LP, HP, 10, 500, New(ch,:));
            New2(:,ch) = resample(double(New(ch,:)),NSR,500);
        end;
        envelopeLq = envelopeL(win1:win1+size(data2{trial},2)-1);
        envelopeRq = envelopeR(win1:win1+size(data2{trial},2)-1);
        envelopeL2(1,:) =  double(envelopeLq);
        envelopeR2(1,:) =  double(envelopeRq);
        [AL(:,1)] = Rbp([], HP,10, 500, envelopeL2(1,:));
        [AR(:,1)] = Rbp([], HP,10, 500, envelopeR2(1,:));
        AL =  resample(double(AL),NSR,500);
        AR =  resample(double(AR),NSR,500);
        win1 = win1+size(data2{trial},2);
        WIN{trial} = win1;x=New2(:,:);
        start = floor(lags(1)/1e3*NSR);
        fin = ceil(lags(2)/1e3*NSR);
        nofsamples = size(x,1);
        [start,fin] = deal(-fin,-start);
        [X] = aad_LagGenerator(x,start:fin);
        EE{trial} = X;
        Rxx(trial,:,:)= (X''*X)/nofsamples;
        if left;
            Rxy_at(trial,:) = (X''*AL)/nofsamples;
            Attended{trial} = AL;
            Unattended{trial} = AR;
        else;
            Rxy_at(trial,:) = (X''*AR)/nofsamples;
            Attended{trial} = AR;
            Unattended{trial} = AL;
        end;
    end;
    if START;
        GO = true;
        if GO == 1&& stopp == 0;
            begin = trial;
        end;
        win1 = round(win1+size(data2{trial},2)-locs);
        START = false;
        stopp = true;
        WIN{trial} = win1;
    end;
end;
trial = trial +1;

%%

[chunk,stamps] = inlet.pull_chunk();
data2{trial} = chunk;
if trial > 1;
    if max(data2{trial}(25,:)) > 20;START = true;
        win1 = 1;
        [pks,locs] = findpeaks(double(data2{trial}(25,:)));
        if stopp;
            stop(tmr);
            clc;
            close;
            GO = false;
        end;
    end;
    if GO;
        clear New New2 AL AR envelopeL2 envelopeR2;
        for ch = 1:24;
            New(ch,:) = double(data2{trial}(ch,:));
            [New(ch,:)] = Rbp(LP, HP, 10, 500, New(ch,:));
            New2(:,ch) = resample(double(New(ch,:)),NSR,500);
        end;
        envelopeLq = envelopeL(win1:win1+size(data2{trial},2)-1);
        envelopeRq = envelopeR(win1:win1+size(data2{trial},2)-1);
        envelopeL2(1,:) =  double(envelopeLq);
        envelopeR2(1,:) =  double(envelopeRq);
        [AL(:,1)] = Rbp([], HP,10, 500, envelopeL2(1,:));
        [AR(:,1)] = Rbp([], HP,10, 500, envelopeR2(1,:));
        AL =  resample(double(AL),NSR,500);
        AR =  resample(double(AR),NSR,500);
        win1 = win1+size(data2{trial},2);
        WIN{trial} = win1;
        x=New2(:,:);
        start = floor(lags(1)/1e3*NSR);
        fin = ceil(lags(2)/1e3*NSR);
        nofsamples = size(x,1);
        [start,fin] = deal(-fin,-start);
        [X] = aad_LagGenerator(x,start:fin);
        recenv = X(:,:) * avg_dec;EE{trial} = X;
        Rxx(trial,:,:)= (X''*X)/nofsamples;
        if left;
            Rxy_at(trial,:) = (X''*AL)/nofsamples;
            Attended{trial} = AL;
            Unattended{trial} = AR;
            CUA = corr2(recenv,AR(:,:));
            CA = corr2(recenv,AL(:,:));
        else;
            Rxy_at(trial,:) = (X''*AR)/nofsamples;
            Attended{trial} = AR;
            Unattended{trial} = AL;
            CUA = corr2(recenv,AL(:,:));
            CA = corr2(recenv,AR(:,:))
            ;end;
        difference(trial) = CA-CUA;
        if FB;
            if SH;
            else;
                if difference(trial) > th1;
                    kleur = [0.2 0.7 0.2];
                elseif difference(trial) > th2;
                    kleur = [0.6 1 0.6];
                elseif difference(trial) > th3;
                    kleur = [1 0.6 0.6];
                else;
                    kleur = [0.7 0.2 0.2];
                end;
                rectangle(''Position'', [0.4 0.4 0.2 0.2], ''Curvature'', [1 1], ''FaceColor'', kleur);
            end;
        end;
    end;
    if START;
        GO = true;
        if GO == 1 && stopp == 0;
            begin = trial;
        end;
        win1 = round(win1+size(data2{trial},2)-locs);
        START = false;
        stopp = true;
        WIN{trial} = win1;
    end;
end;
trial = trial +1;

